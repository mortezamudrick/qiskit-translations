msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-09-21 17:42+0000\n"
"PO-Revision-Date: 2022-09-22 02:47\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/how-to-getting-started-with-estimator.po\n"
"X-Crowdin-File-ID: 9818\n"
"Language: ko_KR\n"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:9
msgid "This page was generated from `docs/tutorials/how-to-getting-started-with-estimator.ipynb`__."
msgstr "이 페이지는 `docs/tutorials/how-to-getting-started-with-estimator.ipynb`__ 에서 생성되었다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:9
msgid "Get started with the Estimator primitive"
msgstr "Estimator primitive 시작하기"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:11
msgid "Learn how to set up and use the Estimator primitive program."
msgstr "Estimator primitive를 설정하고 사용하는 방법을 익힌다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:14
msgid "Overview"
msgstr "개요"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:16
msgid "The Estimator primitive lets you efficiently calculate and interpret expectation values of quantum operators required for many algorithms. You can specify a list of circuits and observables, then evaluate expectation values and variances for a given parameter input."
msgstr "Estimator primitive를 사용하면 다양한 알고리즘에 필요한 양자 연산자의 기댓값을 효율적으로 계산하고 해석할 수 있다. 회로 및 관측가능량에 대한 리스트를 지정한 후, 입력 매개변수에 따른 기댓값과 분산을 계산할 수 있다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:19
msgid "Prepare the environment"
msgstr "환경 준비하기"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:21
msgid "Follow the steps in the `getting started guide <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ to get your quantum service instance ready to use."
msgstr "`getting started guide <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ 의 단계를 따라 양자 서비스 인스턴스를 사용할 수 있도록 준비한다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:23
msgid "You’ll need at least one circuit to submit to the program. Our examples all have circuits in them, but if you want to submit your own circuit, you can use Qiskit to create one. To learn how to create circuits by using Qiskit, see the `Circuit basics tutorial <https://qiskit.org/documentation/tutorials/circuits/01_circuit_basics.html>`__."
msgstr "적어도 하나의 회로가 있어야만 프로그램을 제출할 수 있다. 예제에 제시된 회로 이외에, Qiskit을 사용해 회로를 직접 만들어 업로드할 수도 있다. Qiskit으로 회로를 만드는 법을 학습하려면 `Circuit basics tutorial <https://qiskit.org/documentation/tutorials/circuits/01_circuit_basics.html>`__ 를 참조하면 된다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:25
msgid "Create a list of observables. Observables let you define the properties of the circuit that are relevant to your problem and enable you to efficiently measure their expectation value. For simplicity, you can use the `PauliSumOp class <https://qiskit.org/documentation/stubs/qiskit.opflow.primitive_ops.html#module-qiskit.opflow.primitive_ops>`__ in Qiskit to define them, as illustrated in the example below."
msgstr "리스트의 관측가능량을 만든다. 관측가능량으로 프로그램과 관련 있는 회로의 속성을 정의할 수 있고, 해당 기댓값을 효율적으로 측정할 수 있다. 단순하게 아래 예제에 설명된 대로 Qiskit에 있는 `PauliSumOp class <https://qiskit.org/documentation/stubs/qiskit.opflow.primitive_ops.html#module-qiskit.opflow.primitive_ops>`__ 를 사용해서 관측가능량을 정의할 수 있다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:28
msgid "Start a session"
msgstr "세션 시작하기"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:30
msgid "With Qiskit Runtime primitives, we introduce the concept of a session or a factory that allows you to define a job as a collection of iterative calls to the quantum computer. When you start a session, it caches the data you send so it doesn’t have to be transmitted to the Quantum Datacenter on each iteration."
msgstr "Qiskit Runtime 프리미티브를 사용해서 세션이나 팩토리의 개념을 소개한다. 이를 통해 양자 컴퓨터를 반복해서 호출하는 모음으로 작업을 정의할 수 있다. 세션을 시작할때 양자 데이터 센터로 보내는 데이터가 캐시의 형태로 남아있으므로 매 반복마다 데이터를 전송하지 않아도 된다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:33
msgid "Specify program inputs"
msgstr "프로그램 입력 지정하기"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:35
msgid "The Estimator takes in the following arguments:"
msgstr "추정기는 다음과 같은 입력인수를 갖는다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:37
msgid "**circuits**: a list of (parameterized) circuits that you want to investigate."
msgstr "**circuits**: 살펴보려는 (매개변수화된) 회로의 리스트 자료형"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:38
msgid "**observables**: a list of observables to measure the expectation values."
msgstr "**observables**: 기댓값을 측정하는 관측량의 리스트 자료형"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:39
msgid "**parameters**: a list of parameters for the parameterized circuits. It should be omitted if the circuits provided are not parameterized."
msgstr "**parameters**: 매개변수화 회로의 매개변수 리스트 자료형. 매개변수화된 회로가 아니면 생략해야 한다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:40
msgid "**skip_transpilation**: circuit transpilation is skipped if set to ``True``. Default value is ``False``."
msgstr "**skip_transpilation**: ``True`` 로 설정되어 있으면 회로 트랜스파일레이션(transpilation) 을 하지 않는다. 기본값은 ``False``."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:41
msgid "**service**: the ``QiskitRuntimeService`` instance to run the program on. If not specified, the default saved account for ``QiskitRuntimeService`` is initialized."
msgstr "**service**: 프로그램을 실행하는 ``QiskitRuntimeService`` 인스턴스. 지정되어 있지 않으면, ``QiskitRuntimeService`` 에 기본으로 저장된 계정이 초기화 된다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:42
msgid "**options**: Runtime options dictionary that control the execution environment."
msgstr "**options**: 실행 환경을 제어하는 런타임 옵션 딕셔너리 자료형"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:44
msgid "**backend**: The backend to run on. This option is required if you are running on `IBM Quantum <https://quantum-computing.ibm.com/>`__. However, if you are running on `IBM Cloud <https://cloud.ibm.com/quantum>`__, you can choose not to specify the backend, in which case the least busy backend is used."
msgstr "**backend**: 실행할 백엔드. `IBM Quantum <https://quantum-computing.ibm.com/>`__ 에서 실행할 경우에만 필요하다. 하지만, `IBM Cloud <https://cloud.ibm.com/quantum>`__ 에서 실행 중인 경우, 백엔드를 명시하지 않아도 된다. 이 경우 가장 여유있는 백엔드가 사용된다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:46
msgid "You can find more details in `the Estimator API reference <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Estimator.html>`__."
msgstr "`추정기 API 레퍼런스 <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Estimator.html>`__ 에서 좀 더 자세한 내용을 확인할 수 있다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:48
msgid "Example:"
msgstr "예제:"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:81
msgid "Write to & read from a session"
msgstr "세션에 쓰기 및 읽기"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:83
msgid "Running a job and returning the results are done by writing to and reading from the session. After the results are returned, the session is automatically closed."
msgstr "세션에 쓰기 및 읽기를 통해 작업을 실행하고 결과를 반환할 수 있다. 결과가 반환되면 세션이 자동으로 닫힌다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:86
msgid "Run the job & print results"
msgstr "작업 실행 및 결과 보기"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:88
msgid "Run the job, specifying your previously defined inputs and options. Use ``circuits``, ``observables``, and ``parameter_values`` to use a specific parameter and observable with the specified circuit."
msgstr "이전에 정의한 입력 및 옵션을 지정하여 작업을 실행하시오. ``circuits``, ``observables``, ``parameter_values`` 와 같은 변수를 활용해서 지정한 회로에 대해 특정 매개변수와 관측량을 추정기의 입력인수로 전달하시오."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:90
msgid "For example, this line ``psi1_H23_result = estimator(circuits=[0, 0], observables=[1, 2], parameter_values=[theta1]*2)`` specifies the following:"
msgstr "예를 들어, 이 행 ``psi1_H23_result = estimator(circuits=[0, 0], observables=[1, 2], parameter_values=[theta1]*2)`` 은 다음을 명시한다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:92
msgid "Return the value for using observable ``H2`` and parameter ``theta1`` with the circuit ``psi1``."
msgstr "회로 ``psi1`` 에 대해 관측량 ``H2`` 와 매개변수 ``theta1`` 을 사용해서 기댓값을 구한다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:93
msgid "Return the value for using observable ``H3`` and parameter ``theta1`` with the circuit ``psi1``."
msgstr "회로 ``psi1`` 에 대해 관측량 ``H3`` 와 매개변수 ``theta1`` 을 사용해서 기댓값을 구한다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:95
msgid "You can also pass circuits and observables as objects. For example, ``psi1_H23_result = estimator(circuits=[ps1, ps1], observables=[H2, H3], parameter_values=[theta1]*2)``"
msgstr "회로와 관측량을 객체로 전달할 수 있다. 예를 들어, ``psi1_H23_result = estimator(circuits=[ps1, ps1], observables=[H2, H3], parameter_values=[theta1]*2)``"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:185
msgid "The results align with the parameter - circuit - observable tuples specified previously. For example, the first result: ``EstimatorResult(values=array([1.55273438]), metadata=[{'variance': 8.897655487060547, 'shots': 1024}])`` is the output of the parameter labeled ``theta1`` and observable ``H1`` being sent to the first circuit."
msgstr "이전에 지정한 매개변수-회로-관측량 튜플 자료형과 일치한다. 에를 들어, 첫 번째 결과인 ``EstimatorResult(values=array([1.55273438]), metadata=[{'variance': 8.897655487060547, 'shots': 1024}])`` 는 ``theta1`` 으로 표시된 매개변수의 출력이고 첫 번째 회로로 전송되는 관측량 ``H1`` 이다."

